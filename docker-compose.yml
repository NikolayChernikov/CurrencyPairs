version: "3.7"

services:
  currency-pairs-app:
    image: currency-pairs/app:latest
    build:
      context: .
      dockerfile: deployment/Dockerfile
    env_file:
      - .env
    volumes:
      - .:/app
    working_dir: /app
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - "postgres"
    command:
      - /bin/sh
      - -c
      - |
        poetry run alembic upgrade head
        currency-pairs-worker

  currency-pairs-api:
    image: currency-pairs/app:latest
    build:
      context: .
      dockerfile: deployment/Dockerfile
    env_file:
      - .env
    volumes:
      - .:/app
    working_dir: /app
    restart: always
    ports:
      - "9000:8000"
    depends_on:
      - "currency-pairs-app"
    command:
      - /bin/sh
      - -c
      - |
        gunicorn \
        --config file:/app/bwg/currency_pairs_api/config/gunicorn_fastapi_conf.py \
        "bwg.currency_pairs_api.app:create_app()"

  postgres:
    image: postgres:14.8-alpine3.18
    environment:
      POSTGRES_DB: "db"
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "password"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ../2. Init Database:/docker-entrypoint-initdb.d
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5400:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d db" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G

  prometheus:
    image: prom/prometheus:latest
    ports:
     - "9090:9090"
    volumes:
     - ./deployment/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    volumes:
     - grafana-storage:/var/lib/grafana
    ports:
     - "3000:3000"
    depends_on:
     - "prometheus"
    container_name: grafana

volumes:
  postgres-data:
  grafana-storage: